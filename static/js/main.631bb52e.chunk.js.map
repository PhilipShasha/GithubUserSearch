{"version":3,"sources":["User.js","Users.js","App.js","reportWebVitals.js","index.js"],"names":["User","props","getDetails","event","setState","showinfo","state","url","userinfo","login","fetch","headers","then","response","json","data","userUrl","html_url","userImg","avatar_url","followers","publicrepos","public_repos","name","catch","error","console","prevProps","this","id","ListItem","button","component","Link","to","onClick","Card","src","alt","CardContent","Typography","gutterBottom","variant","color","CardActions","Button","size","href","target","rel","style","textDecoration","fontSize","React","Component","Users","searchUser","sortType","document","getElementById","value","user","userList","items","Grid","container","textAlign","item","xs","FormControl","Input","placeholder","onChange","NativeSelect","type","marginLeft","List","map","App","Fragment","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.631bb52e.chunk.js","sourcesContent":["import React from \"react\"\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport {Link} from \"react-router-dom\";\r\nimport './App.css';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nclass User extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showinfo: false,\r\n            userUrl: '',\r\n            userImg: '',\r\n            followers: '',\r\n            publicrepos: '',\r\n            name: '',\r\n        };\r\n    }\r\n\r\n    getDetails = (event) => {\r\n            this.setState({showinfo: !this.state.showinfo})\r\n\r\n            let url = 'https://api.github.com/users/'+ this.props.userinfo.login\r\n            fetch(url, { \r\n                        headers: {\r\n                                'Accept' : 'application/vnd.github.v3+json'\r\n                            }})\r\n            .then(response => response.json())\r\n            .then((data) => this.setState({userUrl: data.html_url, userImg: data.avatar_url, followers: data.followers, publicrepos: data.public_repos, name: data.name}))\r\n            .catch( error => console.error(error));\r\n        \r\n\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.userinfo.login !== this.props.userinfo.login){\r\n            this.setState({showinfo: false})\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id = 'user'>\r\n                <ListItem key={this.props.userinfo.id} button component = {Link} to={`/users/${this.props.userinfo.login}`} id = 'testing' onClick={this.getDetails}>{this.props.userinfo.login}</ListItem>\r\n                {this.state.showinfo && <ListItem key={this.props.userinfo.id + '_info'}>\r\n                    <Card>\r\n                        <img src={this.state.userImg} alt=''/>\r\n                        <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {this.state.name}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            Followers: {this.state.followers}<br/>\r\n                            Public repositories: {this.state.publicrepos}\r\n                        </Typography>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                            <Button size=\"small\" color=\"primary\">\r\n                            <a href={this.state.userUrl} target='_blank' rel=\"noreferrer\" style={{textDecoration: 'none'}}><GitHubIcon style={{fontSize: '100%'}}></GitHubIcon> GITHUB</a>\r\n                            </Button>\r\n                        </CardActions>\r\n                    </Card> \r\n                </ListItem>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User","import React from \"react\"\r\nimport {Button, FormControl, Input, NativeSelect, Grid} from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport User from './User';\r\nimport './App.css';\r\n\r\nclass Users extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            user: '',\r\n            userList: [],\r\n        };\r\n    }\r\n\r\n    searchUser = (event) => {\r\n        let sortType = document.getElementById('sortBy').value;\r\n        let url = 'https://api.github.com/search/users?q='+ this.state.user + '+in:login' + sortType;\r\n        fetch(url, { \r\n                    headers: {\r\n                            'Accept' : 'application/vnd.github.v3+json'\r\n                        }})\r\n        .then(response => response.json())\r\n        .then((data) => this.setState({userList: data.items}))\r\n        .catch( error => console.error(error));\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <Grid container  style={{textAlign: 'center'}}>\r\n                    <Grid item xs={12}>\r\n                        <FormControl id='search'>\r\n                            <Input placeholder=\"Enter a user...\" value ={this.state.user} onChange={event => this.setState({user: event.target.value})}></Input>\r\n                        </FormControl>\r\n                        <NativeSelect id=\"sortBy\">\r\n                            <option value=\"+sort:joined\">Joined</option>\r\n                            <option value=\"+sort:followers\">Followers</option>\r\n                            <option value=\"+sort:repositories\">Public Repos</option>\r\n                        </NativeSelect>\r\n                        <Button variant=\"contained\" type=\"submit\" onClick={this.searchUser} style={{marginLeft: '10px'}}>Search</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <List id=\"userlist\" component=\"nav\" aria-label=\"main mailbox folders\">\r\n                {this.state.userList.map((user) => (\r\n                    <User userinfo = {user}></User>\r\n                ))}\r\n                </List>\r\n                </div> \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Users","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport {Button} from '@material-ui/core';\nimport Users from './Users';\n\nclass App extends React.Component {\n  render(){\n    return (\n      <Router>\n        <React.Fragment>\n          <h1><Link to={'/'} id='title'>Github User Search</Link><br/></h1>\n          <nav  id='startComponent'>\n            <Button variant=\"outlined\" to={'/users'} component={Link}>Start</Button>\n            <br/><hr/>\n          </nav>\n          <div>\n            <Route path='/'/>\n            <Route path='/users' component={Users}/>\n          </div>\n        </React.Fragment>\n      </Router>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}